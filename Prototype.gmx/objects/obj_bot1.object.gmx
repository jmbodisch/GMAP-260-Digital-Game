<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bot1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myhealth = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_speed = 3;
p1x = obj_player1.x;
p1y = obj_player1.y;
p2x = obj_player2.x;
p2y = obj_player2.y;
p1dist = distance_to_object(obj_player1);
p2dist = distance_to_object(obj_player2);

if p1dist &lt; 200 &amp;&amp; p1dist &gt; 3 &amp;&amp; p1dist &lt; p2dist
    {
    vx = (x - p1x);
    vy = (y - p1y);
    
    len = sqrt((vx*vx) + (vy*vy));
    
    vx = vx / len;
    vy = vy / len;
    
    vx = vx * move_speed;
    vy = vy * move_speed;
    
    if place_free(x-vx, y)
        {
        x = x - vx;
        }
    if place_free(x, y-vy)
        {
        y = y - vy;
        }
    }

if p2dist &lt; 200 &amp;&amp; p2dist &gt; 3 &amp;&amp; p2dist &lt; p1dist
    {
    vx = (x - p2x);
    vy = (y - p2y);
    
    len = sqrt((vx*vx) + (vy*vy));
    
    vx = vx / len;
    vy = vy / len;
    
    vx = vx * move_speed;
    vy = vy * move_speed;
    
    if place_free(x-vx, y)
        {
        x = x - vx;
        }
    if place_free(x, y-vy)
        {
        y = y - vy;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
